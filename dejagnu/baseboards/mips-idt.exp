# Load the generic configuration for this board. This will define any
# routines needed by the tool to communicate with the board.
load_generic_config "mips-idt";

# The compiler used to build for this board. This has *nothing* to do
# with what compiler is tested if we're testing gcc.
set_board_info compiler "[find_gcc]";

# We don't use any multilib options by default.
process_multilib_options ""

set_board_info cflags "[libgloss_include_flags] [newlib_include_flags]";
set_board_info ldflags "[libgloss_link_flags] [newlib_link_flags]";

# Use idt.
if { [board_info $board obj_format] == "ecoff" } {
    set_board_info ldscript "-Wl,-Tidtecoff.ld";
} else {
    set_board_info ldscript "-Wl,-Tidt.ld";
}

# The idt interface can't return exit statuses, so gcc (ctorture et
# al) needs to do what it can to get them.  
set_board_info needs_status_wrapper 1;

# GDB needs to use "target mips" to talk to the board.
set_board_info gdb_protocol "mips";

# And, it can't do arguments, and doesn't have real signals.
set_board_info noargs 1
set_board_info gdb,nosignals 1
