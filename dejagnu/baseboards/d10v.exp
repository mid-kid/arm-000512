# This is a list of toolchains that are supported on this board.
set_board_info target_install {d10v-elf}

# Load the generic configuration for this board. This will define a base set
# of routines needed by the tool to communicate with the board.
load_generic_config "d10v"

# No multilib options are needed by default for this board.
process_multilib_options "";

# We only support newlib on this target. We assume that all multilib
# options have been specified before we get here.
set_board_info compiler "[find_gcc]";
set_board_info cflags "[newlib_include_flags]";
set_board_info ldflags "[libgloss_link_flags] [newlib_link_flags]";
# No linker script needed.
set_board_info ldscript "";

# The board can't really return exit statuses and we need to indicate this;
# however, the standard GCC wrapper won't work with this target because
# it can't do I/O.
#set_board_info needs_status_wrapper  1

# It uses the remote stub protocol to talk to the board.
set_board_info gdb_protocol  "remote"
set_board_info use_gdb_stub  1
# Used by gdb-comm.
set_board_info gdb_run_command  "jump *_start";
set_board_info gdb,start_symbol  "_start";

# Can't pass arguments to programs on this target.
set_board_info noargs  1
# And there's no support for signals.
set_board_info gdb,nosignals  1
# And it can't do I/O.
set_board_info gdb,noinferiorio  1

# Used by a few gcc.c-torture testcases to delimit how large the stack can
# be.
set_board_info gcc,stack_size  5000

# Used by a few gcc.c-torture testcases when trampolines are used.
set_board_info gcc,no_trampolines  1

# Used by a few gcc.c-torture testcases when labels as values are used.
set_board_info gcc,no_label_values  1

# sizeof int != sizeof long.
set_board_info gdb,short_int 1
