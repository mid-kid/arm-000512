dnl Autoconf configure script for Cygwin.
dnl Copyright 1996, 1997, 1998 Cygnus Solutions.
dnl
dnl This file is part of Cygwin.
dnl
dnl This software is a copyrighted work licensed under the terms of the
dnl Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
dnl details.
dnl
dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.12)dnl
AC_INIT(init.cc)

AC_PROG_INSTALL

dnl FIXME: We temporarily define our own version of AC_PROG_CC.  This is
dnl copied from autoconf 2.12, but does not call AC_PROG_CC_WORKS.  We
dnl are probably using a cross compiler, which will not be able to fully
dnl link an executable.  This should really be fixed in autoconf
dnl itself.

AC_DEFUN(LIB_AC_PROG_CC,
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_PROG(CC, gcc, gcc)
if test -z "$CC"; then
  AC_CHECK_PROG(CC, cc, cc, , , /usr/ucb/cc)
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
fi

AC_PROG_CC_GNU

if test $ac_cv_prog_gcc = yes; then
  GCC=yes
dnl Check whether -g works, even if CFLAGS is set, in case the package
dnl plays around with CFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CFLAGS="${CFLAGS+set}"
  ac_save_CFLAGS="$CFLAGS"
  CFLAGS=
  AC_PROG_CC_G
  if test "$ac_test_CFLAGS" = set; then
    CFLAGS="$ac_save_CFLAGS"
  elif test $ac_cv_prog_cc_g = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-O2"
  fi
  if test "$ac_test_CXXFLAGS" != set; then
    CXXFLAGS='$(CFLAGS)'
  fi
else
  GCC=
  test "${CFLAGS+set}" = set || CFLAGS="-g"
fi
])

LIB_AC_PROG_CC

AC_CANONICAL_SYSTEM

AC_CHECK_TOOL(AR, ar, ar)
AC_SUBST(AR)
AC_CHECK_TOOL(AS, as, as)
AC_SUBST(AS)
AC_CHECK_TOOL(RANLIB, ranlib, ranlib)
AC_SUBST(RANLIB)
AC_CHECK_TOOL(LD, ld, ld)
AC_SUBST(LD)
AC_CHECK_TOOL(DLLTOOL, dlltool, dlltool)
AC_SUBST(DLLTOOL)

AC_ALLOCA
AC_CONFIG_SUBDIRS(regexp mingw utils doc)		
AC_PROG_MAKE_SET

AC_ARG_ENABLE(strace-hhmmss,
[ --enable-strace-hhmmss		strace log output has date/time stamp],
[case "${enableval}" in
yes)	STRACE_HHMMSS='-DSTRACE_HHMMSS' ;;
no)	STRACE_HHMMSS= ;;
*) 	AC_MSG_ERROR(bad value ${enableval} given for enable-strace-hhmmss option) ;;
esac
AC_SUBST(STRACE_HHMMSS)
])

AC_ARG_ENABLE(registry-options,
[ --enable-registry-options	cygwin will use the registry for program specific CYGWIN options],
[case "${enableval}" in
yes)	USE_REGISTRY='-DUSE_REGISTRY' ;;
no)	USE_REGISTRY= ;;
*) 	AC_MSG_ERROR(bad value ${enableval} given for enable-registry-options option) ;;
esac
AC_SUBST(USE_REGISTRY)
])

AC_SUBST(PTH_ALLOW)
PTH_ALLOW=';'
AC_ARG_ENABLE(threadsafe,
[ --enable-threadsafe=[runtime]	Build a cygwin DLL which is thread safe],
[case "${enableval}" in
yes)	 MT_SAFE='-D_MT_SAFE=1'	PTH_ALLOW=	;;
no)	 MT_SAFE= 				;;
runtime) MT_SAFE='-D_MT_SAFE=2' PTH_ALLOW=	;;
esac
AC_SUBST(MT_SAFE)
])

AC_ARG_ENABLE(extra-threadsafe-checking,
[ --enable-extra-threadsafe-checking	Build a cygwin DLL which is thread safe with extra consistency checking],
[case "${enableval}" in
yes)	 : ${MT_SAFE='-D_MT_SAFE=1'}; THREAD_FAILSAFE=-D_CYG_THREAD_FAILSAFE	;;
no)	 MT_SAFE=		;;
esac
AC_SUBST(THREAD_FAILSAFE)
])

AC_ARG_ENABLE(debugging,
[ --enable-debugging		Build a cygwin DLL which has more consistency checking for debugging],
[case "${enableval}" in
yes)	 DEBUGGING='-DDEBUGGING' ;;
no)	 DEBUGGING= ;;
esac
AC_SUBST(DEBUGGING)
])


dnl The only time we might want to transform the install names
dnl is for unix x cygwin.  Otherwise we don't.  For now we don't
dnl transform names.

dnl if test "x$cross_compiling" = "xno" -a ; then
dnl   if test "x$program_transform_name" = "xs,x,x,"; then
dnl     program_transform_name=""
dnl   fi
dnl   if test "x$program_transform_name" = "x"; then
dnl     program_transform_name="s,^,$target_alias-,"
dnl   else
dnl     program_transform_name="$program_transform_name -e s,^,$target_alias-,"
dnl   fi
dnl fi

dnl If CC can't create a .exe, which can happen when building from scratch
dnl because crt0.o hasn't been installed yet, set up EXE_LDFLAGS to find
dnl newlib.  Newlib is ../newlib when configure runs, but is ../../newlib
dnl from the perspective of subdirectory makes.

AC_MSG_CHECKING([if newlib needed])
EXE_LDFLAGS=
AC_TRY_LINK(,
	[/* main already defined */]
	,
	AC_MSG_RESULT(no)
	,
	AC_MSG_RESULT(yes)
	if test -d ../newlib
	then
		EXE_LDFLAGS="-B../../newlib/ -L.."
	else
		AC_MSG_WARN(newlib not found - utility .exe's may not link)
	fi
)
AC_SUBST(EXE_LDFLAGS)

case "$target_cpu" in
   i386|i486|i586|i686) DLL_ENTRY="_dll_entry@12"
		DEF_DLL_ENTRY="dll_entry@12"
 		ALLOCA="_alloca"
		CONFIG_DIR="i386"  ;;
   powerpc*)	DLL_ENTRY="dll_entry" 
		DEF_DLL_ENTRY="dll_entry" 
		ALLOCA=" __allocate_stack"
		CONFIG_DIR="ppc"  ;;
   *)		AC_MSG_ERROR(Invalid target processor \"$target_cpu\") ;;
esac

AC_SUBST(DLL_ENTRY)
AC_SUBST(DEF_DLL_ENTRY)
AC_SUBST(ALLOCA)
AC_SUBST(CONFIG_DIR)
AC_OUTPUT(Makefile cygwin.def:cygwin.din)
